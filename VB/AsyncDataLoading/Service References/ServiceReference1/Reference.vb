Imports System
Imports System.Runtime.Serialization

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18046
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Namespace AsyncDataLoading.ServiceReference1


    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"), System.Runtime.Serialization.DataContractAttribute(Name:="Order", [Namespace]:="http://schemas.datacontract.org/2004/07/WcfService"), System.SerializableAttribute()>
    Partial Public Class Order
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged

        <System.NonSerializedAttribute()>
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private CustomerIDField As String

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private EmployeeIDField? As Integer

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private FreightField? As Decimal

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private OrderDateField? As Date

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private OrderIDField As Integer

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private RequiredDateField? As Date

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShipAddressField As String

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShipCityField As String

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShipCountryField As String

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShipNameField As String

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShipPostalCodeField As String

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShipRegionField As String

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShipViaField? As Integer

        <System.Runtime.Serialization.OptionalFieldAttribute()>
        Private ShippedDateField? As Date

        <Global.System.ComponentModel.BrowsableAttribute(False)>
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set(ByVal value As System.Runtime.Serialization.ExtensionDataObject)
                Me.extensionDataField = value
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property CustomerID() As String
            Get
                Return Me.CustomerIDField
            End Get
            Set(ByVal value As String)
                If (Object.ReferenceEquals(Me.CustomerIDField, value) <> True) Then
                    Me.CustomerIDField = value
                    Me.RaisePropertyChanged("CustomerID")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property EmployeeID() As Integer?
            Get
                Return Me.EmployeeIDField
            End Get
            Set(ByVal value? As Integer)
                If (Me.EmployeeIDField.Equals(value) <> True) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property Freight() As Decimal?
            Get
                Return Me.FreightField
            End Get
            Set(ByVal value? As Decimal)
                If (Me.FreightField.Equals(value) <> True) Then
                    Me.FreightField = value
                    Me.RaisePropertyChanged("Freight")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property OrderDate() As Date?
            Get
                Return Me.OrderDateField
            End Get
            Set(ByVal value? As Date)
                If (Me.OrderDateField.Equals(value) <> True) Then
                    Me.OrderDateField = value
                    Me.RaisePropertyChanged("OrderDate")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property OrderID() As Integer
            Get
                Return Me.OrderIDField
            End Get
            Set(ByVal value As Integer)
                If (Me.OrderIDField.Equals(value) <> True) Then
                    Me.OrderIDField = value
                    Me.RaisePropertyChanged("OrderID")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property RequiredDate() As Date?
            Get
                Return Me.RequiredDateField
            End Get
            Set(ByVal value? As Date)
                If (Me.RequiredDateField.Equals(value) <> True) Then
                    Me.RequiredDateField = value
                    Me.RaisePropertyChanged("RequiredDate")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShipAddress() As String
            Get
                Return Me.ShipAddressField
            End Get
            Set(ByVal value As String)
                If (Object.ReferenceEquals(Me.ShipAddressField, value) <> True) Then
                    Me.ShipAddressField = value
                    Me.RaisePropertyChanged("ShipAddress")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShipCity() As String
            Get
                Return Me.ShipCityField
            End Get
            Set(ByVal value As String)
                If (Object.ReferenceEquals(Me.ShipCityField, value) <> True) Then
                    Me.ShipCityField = value
                    Me.RaisePropertyChanged("ShipCity")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShipCountry() As String
            Get
                Return Me.ShipCountryField
            End Get
            Set(ByVal value As String)
                If (Object.ReferenceEquals(Me.ShipCountryField, value) <> True) Then
                    Me.ShipCountryField = value
                    Me.RaisePropertyChanged("ShipCountry")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShipName() As String
            Get
                Return Me.ShipNameField
            End Get
            Set(ByVal value As String)
                If (Object.ReferenceEquals(Me.ShipNameField, value) <> True) Then
                    Me.ShipNameField = value
                    Me.RaisePropertyChanged("ShipName")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShipPostalCode() As String
            Get
                Return Me.ShipPostalCodeField
            End Get
            Set(ByVal value As String)
                If (Object.ReferenceEquals(Me.ShipPostalCodeField, value) <> True) Then
                    Me.ShipPostalCodeField = value
                    Me.RaisePropertyChanged("ShipPostalCode")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShipRegion() As String
            Get
                Return Me.ShipRegionField
            End Get
            Set(ByVal value As String)
                If (Object.ReferenceEquals(Me.ShipRegionField, value) <> True) Then
                    Me.ShipRegionField = value
                    Me.RaisePropertyChanged("ShipRegion")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShipVia() As Integer?
            Get
                Return Me.ShipViaField
            End Get
            Set(ByVal value? As Integer)
                If (Me.ShipViaField.Equals(value) <> True) Then
                    Me.ShipViaField = value
                    Me.RaisePropertyChanged("ShipVia")
                End If
            End Set
        End Property

        <System.Runtime.Serialization.DataMemberAttribute()>
        Public Property ShippedDate() As Date?
            Get
                Return Me.ShippedDateField
            End Get
            Set(ByVal value? As Date)
                If (Me.ShippedDateField.Equals(value) <> True) Then
                    Me.ShippedDateField = value
                    Me.RaisePropertyChanged("ShippedDate")
                End If
            End Set
        End Property

        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (propertyChanged IsNot Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ServiceModel.ServiceContractAttribute(ConfigurationName:="ServiceReference1.IOrderService")>
    Public Interface IOrderService

        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderService/GetRecords", ReplyAction:="http://tempuri.org/IOrderService/GetRecordsResponse")>
        Function GetRecords(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsRequest) As AsyncDataLoading.ServiceReference1.GetRecordsResponse

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/IOrderService/GetRecords", ReplyAction:="http://tempuri.org/IOrderService/GetRecordsResponse")>
        Function BeginGetRecords(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndGetRecords(ByVal result As System.IAsyncResult) As AsyncDataLoading.ServiceReference1.GetRecordsResponse

        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IOrderService/GetRecordsCount", ReplyAction:="http://tempuri.org/IOrderService/GetRecordsCountResponse")>
        Function GetRecordsCount(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsCountRequest) As AsyncDataLoading.ServiceReference1.GetRecordsCountResponse

        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=True, Action:="http://tempuri.org/IOrderService/GetRecordsCount", ReplyAction:="http://tempuri.org/IOrderService/GetRecordsCountResponse")>
        Function BeginGetRecordsCount(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsCountRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult

        Function EndGetRecordsCount(ByVal result As System.IAsyncResult) As AsyncDataLoading.ServiceReference1.GetRecordsCountResponse
    End Interface

    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ServiceModel.MessageContractAttribute(WrapperName:="GetRecords", WrapperNamespace:="http://tempuri.org/", IsWrapped:=True)>
    Partial Public Class GetRecordsRequest

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>
        Public skipCount As Integer

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>
        Public takeCount As Integer

        Public Sub New()
        End Sub

        Public Sub New(ByVal skipCount As Integer, ByVal takeCount As Integer)
            Me.skipCount = skipCount
            Me.takeCount = takeCount
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ServiceModel.MessageContractAttribute(WrapperName:="GetRecordsResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=True)>
    Partial Public Class GetRecordsResponse

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>
        Public GetRecordsResult As System.Collections.ObjectModel.ObservableCollection(Of AsyncDataLoading.ServiceReference1.Order)

        Public Sub New()
        End Sub

        Public Sub New(ByVal GetRecordsResult As System.Collections.ObjectModel.ObservableCollection(Of AsyncDataLoading.ServiceReference1.Order))
            Me.GetRecordsResult = GetRecordsResult
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ServiceModel.MessageContractAttribute(WrapperName:="GetRecordsCount", WrapperNamespace:="http://tempuri.org/", IsWrapped:=True)>
    Partial Public Class GetRecordsCountRequest

        Public Sub New()
        End Sub
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"), System.ServiceModel.MessageContractAttribute(WrapperName:="GetRecordsCountResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=True)>
    Partial Public Class GetRecordsCountResponse

        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>
        Public GetRecordsCountResult As Integer

        Public Sub New()
        End Sub

        Public Sub New(ByVal GetRecordsCountResult As Integer)
            Me.GetRecordsCountResult = GetRecordsCountResult
        End Sub
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>
    Public Interface IOrderServiceChannel
        Inherits AsyncDataLoading.ServiceReference1.IOrderService, System.ServiceModel.IClientChannel

    End Interface

    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>
    Partial Public Class GetRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As AsyncDataLoading.ServiceReference1.GetRecordsResponse
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return (DirectCast(Me.results(0), AsyncDataLoading.ServiceReference1.GetRecordsResponse))
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>
    Partial Public Class GetRecordsCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        Public ReadOnly Property Result() As AsyncDataLoading.ServiceReference1.GetRecordsCountResponse
            Get
                MyBase.RaiseExceptionIfNecessary()
                Return (DirectCast(Me.results(0), AsyncDataLoading.ServiceReference1.GetRecordsCountResponse))
            End Get
        End Property
    End Class

    <System.Diagnostics.DebuggerStepThroughAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>
    Partial Public Class OrderServiceClient
        Inherits System.ServiceModel.ClientBase(Of AsyncDataLoading.ServiceReference1.IOrderService)
        Implements AsyncDataLoading.ServiceReference1.IOrderService

        Private onBeginGetRecordsDelegate As BeginOperationDelegate

        Private onEndGetRecordsDelegate As EndOperationDelegate

        Private onGetRecordsCompletedDelegate As System.Threading.SendOrPostCallback

        Private onBeginGetRecordsCountDelegate As BeginOperationDelegate

        Private onEndGetRecordsCountDelegate As EndOperationDelegate

        Private onGetRecordsCountCompletedDelegate As System.Threading.SendOrPostCallback

        Public Sub New()
        End Sub

        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub

        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub

        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub

        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub

        Public Event GetRecordsCompleted As System.EventHandler(Of GetRecordsCompletedEventArgs)

        Public Event GetRecordsCountCompleted As System.EventHandler(Of GetRecordsCountCompletedEventArgs)

        Public Function GetRecords(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsRequest) As AsyncDataLoading.ServiceReference1.GetRecordsResponse Implements AsyncDataLoading.ServiceReference1.IOrderService.GetRecords
            Return MyBase.Channel.GetRecords(request)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Public Function BeginGetRecords(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AsyncDataLoading.ServiceReference1.IOrderService.BeginGetRecords
            Return MyBase.Channel.BeginGetRecords(request, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Public Function EndGetRecords(ByVal result As System.IAsyncResult) As AsyncDataLoading.ServiceReference1.GetRecordsResponse Implements AsyncDataLoading.ServiceReference1.IOrderService.EndGetRecords
            Return MyBase.Channel.EndGetRecords(result)
        End Function

        Private Function OnBeginGetRecords(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As AsyncDataLoading.ServiceReference1.GetRecordsRequest = (DirectCast(inValues(0), AsyncDataLoading.ServiceReference1.GetRecordsRequest))
            Return Me.BeginGetRecords(request, callback, asyncState)
        End Function

        Private Function OnEndGetRecords(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As AsyncDataLoading.ServiceReference1.GetRecordsResponse = Me.EndGetRecords(result)
            Return New Object() { retVal}
        End Function

        Private Sub OnGetRecordsCompleted(ByVal state As Object)
            If (Me.GetRecordsCompletedEvent IsNot Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = (DirectCast(state, InvokeAsyncCompletedEventArgs))
                RaiseEvent GetRecordsCompleted(Me, New GetRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Sub GetRecordsAsync(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsRequest)
            Me.GetRecordsAsync(request, Nothing)
        End Sub

        Public Sub GetRecordsAsync(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsRequest, ByVal userState As Object)
            If (Me.onBeginGetRecordsDelegate Is Nothing) Then
                Me.onBeginGetRecordsDelegate = New BeginOperationDelegate(AddressOf Me.OnBeginGetRecords)
            End If
            If (Me.onEndGetRecordsDelegate Is Nothing) Then
                Me.onEndGetRecordsDelegate = New EndOperationDelegate(AddressOf Me.OnEndGetRecords)
            End If
            If (Me.onGetRecordsCompletedDelegate Is Nothing) Then
                Me.onGetRecordsCompletedDelegate = New System.Threading.SendOrPostCallback(AddressOf Me.OnGetRecordsCompleted)
            End If
            MyBase.InvokeAsync(Me.onBeginGetRecordsDelegate, New Object() { request}, Me.onEndGetRecordsDelegate, Me.onGetRecordsCompletedDelegate, userState)
        End Sub

        Public Function GetRecordsCount(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsCountRequest) As AsyncDataLoading.ServiceReference1.GetRecordsCountResponse Implements AsyncDataLoading.ServiceReference1.IOrderService.GetRecordsCount
            Return MyBase.Channel.GetRecordsCount(request)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Public Function BeginGetRecordsCount(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsCountRequest, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements AsyncDataLoading.ServiceReference1.IOrderService.BeginGetRecordsCount
            Return MyBase.Channel.BeginGetRecordsCount(request, callback, asyncState)
        End Function

        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>
        Public Function EndGetRecordsCount(ByVal result As System.IAsyncResult) As AsyncDataLoading.ServiceReference1.GetRecordsCountResponse Implements AsyncDataLoading.ServiceReference1.IOrderService.EndGetRecordsCount
            Return MyBase.Channel.EndGetRecordsCount(result)
        End Function

        Private Function OnBeginGetRecordsCount(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As AsyncDataLoading.ServiceReference1.GetRecordsCountRequest = (DirectCast(inValues(0), AsyncDataLoading.ServiceReference1.GetRecordsCountRequest))
            Return Me.BeginGetRecordsCount(request, callback, asyncState)
        End Function

        Private Function OnEndGetRecordsCount(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As AsyncDataLoading.ServiceReference1.GetRecordsCountResponse = Me.EndGetRecordsCount(result)
            Return New Object() { retVal}
        End Function

        Private Sub OnGetRecordsCountCompleted(ByVal state As Object)
            If (Me.GetRecordsCountCompletedEvent IsNot Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = (DirectCast(state, InvokeAsyncCompletedEventArgs))
                RaiseEvent GetRecordsCountCompleted(Me, New GetRecordsCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub

        Public Sub GetRecordsCountAsync(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsCountRequest)
            Me.GetRecordsCountAsync(request, Nothing)
        End Sub

        Public Sub GetRecordsCountAsync(ByVal request As AsyncDataLoading.ServiceReference1.GetRecordsCountRequest, ByVal userState As Object)
            If (Me.onBeginGetRecordsCountDelegate Is Nothing) Then
                Me.onBeginGetRecordsCountDelegate = New BeginOperationDelegate(AddressOf Me.OnBeginGetRecordsCount)
            End If
            If (Me.onEndGetRecordsCountDelegate Is Nothing) Then
                Me.onEndGetRecordsCountDelegate = New EndOperationDelegate(AddressOf Me.OnEndGetRecordsCount)
            End If
            If (Me.onGetRecordsCountCompletedDelegate Is Nothing) Then
                Me.onGetRecordsCountCompletedDelegate = New System.Threading.SendOrPostCallback(AddressOf Me.OnGetRecordsCountCompleted)
            End If
            MyBase.InvokeAsync(Me.onBeginGetRecordsCountDelegate, New Object() { request}, Me.onEndGetRecordsCountDelegate, Me.onGetRecordsCountCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
